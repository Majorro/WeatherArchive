// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherArchive.Data;

#nullable disable

namespace WeatherArchive.Migrations
{
    [DbContext(typeof(WeatherArchiveContext))]
    [Migration("20220318095823_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WeatherArchive.Models.ArchiveEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AtmospherePressure")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CloudBase")
                        .HasColumnType("int");

                    b.Property<int?>("Cloudiness")
                        .HasColumnType("int");

                    b.Property<double?>("DewPoint")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("HorizontalVisibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RelativeHumidity")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("Temperature")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<DateTime?>("Timestamp")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("WeatherСonditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WindSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ArchiveEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
